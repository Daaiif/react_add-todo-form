{"version":3,"sources":["api/users.js","api/todos.js","components/TodoList/TodoList.jsx","components/Form/Form.jsx","App.js","index.js"],"names":["users","id","name","username","email","address","street","suite","city","zipcode","geo","lat","lng","phone","website","company","catchPhrase","bs","todos","userId","title","completed","TodoList","todoList","className","map","todo","key","user","Form","state","valueSelector","valueText","errorSelector","errorText","handleChangeSelector","e","newValue","target","value","setState","handleChangeText","addTodo","props","addInList","preventDefault","find","person","this","onSubmit","onChange","disabled","style","display","type","React","PureComponent","preparedTodos","App","newTodo","newtodoList","preparedTodo","length","push","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ef3deb5e.chunk.js","sourcesContent":["const users = [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n    address: {\n      street: 'Kulas Light',\n      suite: 'Apt. 556',\n      city: 'Gwenborough',\n      zipcode: '92998-3874',\n      geo: {\n        lat: '-37.3159',\n        lng: '81.1496',\n      },\n    },\n    phone: '1-770-736-8031 x56442',\n    website: 'hildegard.org',\n    company: {\n      name: 'Romaguera-Crona',\n      catchPhrase: 'Multi-layered client-server neural-net',\n      bs: 'harness real-time e-markets',\n    },\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n    address: {\n      street: 'Victor Plains',\n      suite: 'Suite 879',\n      city: 'Wisokyburgh',\n      zipcode: '90566-7771',\n      geo: {\n        lat: '-43.9509',\n        lng: '-34.4618',\n      },\n    },\n    phone: '010-692-6593 x09125',\n    website: 'anastasia.net',\n    company: {\n      name: 'Deckow-Crist',\n      catchPhrase: 'Proactive didactic contingency',\n      bs: 'synergize scalable supply-chains',\n    },\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n    address: {\n      street: 'Douglas Extension',\n      suite: 'Suite 847',\n      city: 'McKenziehaven',\n      zipcode: '59590-4157',\n      geo: {\n        lat: '-68.6102',\n        lng: '-47.0653',\n      },\n    },\n    phone: '1-463-123-4447',\n    website: 'ramiro.info',\n    company: {\n      name: 'Romaguera-Jacobson',\n      catchPhrase: 'Face to face bifurcated interface',\n      bs: 'e-enable strategic applications',\n    },\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n    address: {\n      street: 'Hoeger Mall',\n      suite: 'Apt. 692',\n      city: 'South Elvis',\n      zipcode: '53919-4257',\n      geo: {\n        lat: '29.4572',\n        lng: '-164.2990',\n      },\n    },\n    phone: '493-170-9623 x156',\n    website: 'kale.biz',\n    company: {\n      name: 'Robel-Corkery',\n      catchPhrase: 'Multi-tiered zero tolerance productivity',\n      bs: 'transition cutting-edge web services',\n    },\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n    address: {\n      street: 'Skiles Walks',\n      suite: 'Suite 351',\n      city: 'Roscoeview',\n      zipcode: '33263',\n      geo: {\n        lat: '-31.8129',\n        lng: '62.5342',\n      },\n    },\n    phone: '(254)954-1289',\n    website: 'demarco.info',\n    company: {\n      name: 'Keebler LLC',\n      catchPhrase: 'User-centric fault-tolerant solution',\n      bs: 'revolutionize end-to-end systems',\n    },\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n    address: {\n      street: 'Norberto Crossing',\n      suite: 'Apt. 950',\n      city: 'South Christy',\n      zipcode: '23505-1337',\n      geo: {\n        lat: '-71.4197',\n        lng: '71.7478',\n      },\n    },\n    phone: '1-477-935-8478 x6430',\n    website: 'ola.org',\n    company: {\n      name: 'Considine-Lockman',\n      catchPhrase: 'Synchronised bottom-line interface',\n      bs: 'e-enable innovative applications',\n    },\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n    address: {\n      street: 'Rex Trail',\n      suite: 'Suite 280',\n      city: 'Howemouth',\n      zipcode: '58804-1099',\n      geo: {\n        lat: '24.8918',\n        lng: '21.8984',\n      },\n    },\n    phone: '210.067.6132',\n    website: 'elvis.io',\n    company: {\n      name: 'Johns Group',\n      catchPhrase: 'Configurable multimedia task-force',\n      bs: 'generate enterprise e-tailers',\n    },\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n    address: {\n      street: 'Ellsworth Summit',\n      suite: 'Suite 729',\n      city: 'Aliyaview',\n      zipcode: '45169',\n      geo: {\n        lat: '-14.3990',\n        lng: '-120.7677',\n      },\n    },\n    phone: '586.493.6943 x140',\n    website: 'jacynthe.com',\n    company: {\n      name: 'Abernathy Group',\n      catchPhrase: 'Implemented secondary concept',\n      bs: 'e-enable extensible e-tailers',\n    },\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n    address: {\n      street: 'Dayna Park',\n      suite: 'Suite 449',\n      city: 'Bartholomebury',\n      zipcode: '76495-3109',\n      geo: {\n        lat: '24.6463',\n        lng: '-168.8889',\n      },\n    },\n    phone: '(775)976-6794 x41206',\n    website: 'conrad.com',\n    company: {\n      name: 'Yost and Sons',\n      catchPhrase: 'Switchable contextually-based project',\n      bs: 'aggregate real-time technologies',\n    },\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n    address: {\n      street: 'Kattie Turnpike',\n      suite: 'Suite 198',\n      city: 'Lebsackbury',\n      zipcode: '31428-2261',\n      geo: {\n        lat: '-38.2386',\n        lng: '57.2232',\n      },\n    },\n    phone: '024-648-3804',\n    website: 'ambrose.net',\n    company: {\n      name: 'Hoeger LLC',\n      catchPhrase: 'Centralized empowering task-force',\n      bs: 'target end-to-end models',\n    },\n  },\n];\n\nexport default users;\n","/* eslint-disable max-len */\n\nconst todos = [\n  {\n    userId: 1,\n    id: 1,\n    title: 'delectus aut autem',\n    completed: false,\n  },\n  {\n    userId: 1,\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n  },\n];\n\nexport default todos;\n","import React from 'react';\nimport propTypes from 'prop-types';\n\nexport const TodoList = ({ todoList }) => (\n  <ul className=\"list\">\n    {todoList.map(todo => (\n      <li key={todo.id}>\n        {`${todo.id}. ${todo.user}`}\n        {`${todo.title}: ${todo.completed ? ' completed' : ' not completed'}`}\n      </li>\n    ))}\n  </ul>\n);\n\nTodoList.propTypes = {\n  todoList: propTypes.arrayOf(\n    propTypes.shape({\n      id: propTypes.number.isRequired,\n      user: propTypes.string.isRequired,\n      title: propTypes.string.isRequired,\n      completed: propTypes.bool.isRequired,\n    }).isRequired,\n  ).isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport class Form extends React.PureComponent {\n  state ={\n    valueSelector: 'Choose user',\n    valueText: '',\n    errorSelector: 'none',\n    errorText: 'none',\n  }\n\n  handleChangeSelector = (e) => {\n    const newValue = e.target.value;\n\n    this.setState({\n      valueSelector: newValue,\n      errorSelector: 'none',\n    });\n  }\n\n  handleChangeText = (e) => {\n    const newValue = e.target.value;\n\n    this.setState({\n      valueText: newValue,\n      errorText: 'none',\n    });\n  }\n\n  addTodo = (e) => {\n    const { valueText, valueSelector } = this.state;\n    const { users, addInList } = this.props;\n\n    e.preventDefault();\n\n    if (valueSelector === 'Choose user') {\n      this.setState({\n        errorSelector: 'flex',\n      });\n    }\n\n    if (valueText === '') {\n      this.setState({\n        errorText: 'flex',\n      });\n    }\n\n    if ((valueSelector !== 'Choose user') && (valueText !== '')) {\n      const newTodo = {\n        user: users.find(person => person.name === valueSelector).name,\n        title: valueText,\n        completed: false,\n      };\n\n      addInList(newTodo);\n\n      this.setState({\n        valueSelector: 'Choose user',\n        valueText: '',\n      });\n    }\n  }\n\n  render() {\n    const { valueSelector, valueText, errorText, errorSelector } = this.state;\n    const { users } = this.props;\n\n    return (\n      <form onSubmit={this.addTodo} className=\"form\">\n        <div className=\"inputLine\">\n          <select\n            value={valueSelector}\n            onChange={this.handleChangeSelector}\n            className=\"input\"\n          >\n            <option value=\"Choose user\" disabled>Choose user</option>\n            {users.map(user => (\n              <option value={user.name} key={user.id}>{user.name}</option>\n            ))}\n          </select>\n          <div\n            className=\"error\"\n            style={{ display: errorSelector }}\n          >\n            Please choose a user\n          </div>\n        </div>\n        <div className=\"inputLine\">\n          <input\n            className=\"input\"\n            value={valueText}\n            onChange={this.handleChangeText}\n            type=\"text\"\n          />\n          <div\n            className=\"error\"\n            style={{ display: errorText }}\n          >\n            Please enter the title\n          </div>\n        </div>\n        <button\n          type=\"submit\"\n          className=\"submit\"\n        >\n          Add\n        </button>\n      </form>\n    );\n  }\n}\n\nForm.propTypes = {\n  users: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string.isRequired,\n      id: PropTypes.number.isRequired,\n    }).isRequired,\n  ).isRequired,\n  addInList: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport './App.css';\n\nimport users from './api/users';\nimport todos from './api/todos';\n\nimport { TodoList } from './components/TodoList';\nimport { Form } from './components/Form';\n\nconst preparedTodos = todos.map(todo => ({\n  ...todo,\n  user: users.find(person => person.id === todo.userId).name,\n}));\n\nexport class App extends React.Component {\n  state = {\n    todoList: preparedTodos,\n  }\n\n  addInList = (newTodo) => {\n    const { todoList } = this.state;\n    const newtodoList = [...todoList];\n    const preparedTodo = newTodo;\n\n    preparedTodo.id = todoList[todoList.length - 1].id + 1;\n\n    newtodoList.push(preparedTodo);\n\n    this.setState({\n      todoList: newtodoList,\n    });\n  }\n\n  render() {\n    const { todoList } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>Add todo form</h1>\n        <Form\n          todoList={todoList}\n          users={users}\n          addInList={this.addInList}\n        />\n        <TodoList todoList={todoList} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}